// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  Admin
}

model User {
  id Int @id @default(autoincrement())
  username String 
  email String @unique
  password String
  role Role
  posts Post[]
  commented Comments[]
  like Like[]
}

model Post {
  id Int @id @default(autoincrement())
  title String
  description String
  picture String?
  authorId Int
  author User @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  like Like[]
  comments Comments[]
}

model Like {
  id Int @id @default(autoincrement())
  likedBy User @relation(fields: [likeId], references: [id]) // who liked the post
  likeId Int
  likedPost Post @relation(fields: [likedPostId], references: [id]) // which post liked
  likedPostId Int
}

model Comments {
  id Int @id @default(autoincrement())
  commentor User @relation(fields: [commentorId], references: [id]) // who commented
  commentorId Int
  postId Int
  post Post @relation(fields: [postId], references: [id]) // commented on which post
  content String // what commented
}
